{"remainingRequest":"/home/joost/workflow/MoscowMap/node_modules/babel-loader/lib/index.js!/home/joost/workflow/MoscowMap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/joost/workflow/MoscowMap/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joost/workflow/MoscowMap/src/components/MapMoscow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joost/workflow/MoscowMap/src/components/MapMoscow.vue","mtime":1599861553716},{"path":"/home/joost/workflow/MoscowMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/joost/workflow/MoscowMap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/joost/workflow/MoscowMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/joost/workflow/MoscowMap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwovLwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyB5bWFwcyBmcm9tICd5bWFwcyc7CnltYXBzLnJlYWR5KGluaXQpOwoKZnVuY3Rpb24gaW5pdCgpIHsKICB2YXIgbXlNYXAgPSBuZXcgeW1hcHMuTWFwKCdtYXAnLCB7CiAgICBjZW50ZXI6IFszMC4yNjQ5ODE5NTU0NTk2MTgsIDU5Ljk1Njc5NjI2MTAwOTddLAogICAgem9vbTogOSwKICAgIGNvbnRyb2xzOiBbJ2dlb2xvY2F0aW9uQ29udHJvbCcsICdzZWFyY2hDb250cm9sJ10KICB9KSwKICAgICAgZGVsaXZlcnlQb2ludCA9IG5ldyB5bWFwcy5HZW9PYmplY3QoewogICAgZ2VvbWV0cnk6IHsKICAgICAgdHlwZTogJ1BvaW50JwogICAgfSwKICAgIHByb3BlcnRpZXM6IHsKICAgICAgaWNvbkNhcHRpb246ICfQkNC00YDQtdGBJwogICAgfQogIH0sIHsKICAgIHByZXNldDogJ2lzbGFuZHMjYmxhY2tEb3RJY29uV2l0aENhcHRpb24nLAogICAgZHJhZ2dhYmxlOiB0cnVlLAogICAgaWNvbkNhcHRpb25NYXhXaWR0aDogJzIxNScKICB9KSwKICAgICAgc2VhcmNoQ29udHJvbCA9IG15TWFwLmNvbnRyb2xzLmdldCgnc2VhcmNoQ29udHJvbCcpOwogIHNlYXJjaENvbnRyb2wub3B0aW9ucy5zZXQoewogICAgbm9QbGFjZW1hcms6IHRydWUsCiAgICBwbGFjZWhvbGRlckNvbnRlbnQ6ICfQktCy0LXQtNC40YLQtSDQsNC00YDQtdGBINC00L7RgdGC0LDQstC60LgnCiAgfSk7CiAgbXlNYXAuZ2VvT2JqZWN0cy5hZGQoZGVsaXZlcnlQb2ludCk7CgogIGZ1bmN0aW9uIG9uWm9uZXNMb2FkKGpzb24pIHsKICAgIC8vINCU0L7QsdCw0LLQu9GP0LXQvCDQt9C+0L3RiyDQvdCwINC60LDRgNGC0YMuCiAgICB2YXIgZGVsaXZlcnlab25lcyA9IHltYXBzLmdlb1F1ZXJ5KGpzb24pLmFkZFRvTWFwKG15TWFwKTsgLy8g0JfQsNC00LDRkdC8INGG0LLQtdGCINC4INC60L7QvdGC0LXQvdGCINCx0LDQu9GD0L3QvtCyINC/0L7Qu9C40LPQvtC90L7Qsi4KCiAgICBkZWxpdmVyeVpvbmVzLmVhY2goZnVuY3Rpb24gKG9iaikgewogICAgICBvYmoub3B0aW9ucy5zZXQoewogICAgICAgIGZpbGxDb2xvcjogb2JqLnByb3BlcnRpZXMuZ2V0KCdmaWxsJyksCiAgICAgICAgZmlsbE9wYWNpdHk6IG9iai5wcm9wZXJ0aWVzLmdldCgnZmlsbC1vcGFjaXR5JyksCiAgICAgICAgc3Ryb2tlQ29sb3I6IG9iai5wcm9wZXJ0aWVzLmdldCgnc3Ryb2tlJyksCiAgICAgICAgc3Ryb2tlV2lkdGg6IG9iai5wcm9wZXJ0aWVzLmdldCgnc3Ryb2tlLXdpZHRoJyksCiAgICAgICAgc3Ryb2tlT3BhY2l0eTogb2JqLnByb3BlcnRpZXMuZ2V0KCdzdHJva2Utb3BhY2l0eScpCiAgICAgIH0pOwogICAgICBvYmoucHJvcGVydGllcy5zZXQoJ2JhbGxvb25Db250ZW50Jywgb2JqLnByb3BlcnRpZXMuZ2V0KCdkZXNjcmlwdGlvbicpKTsKICAgIH0pOyAvLyDQn9GA0L7QstC10YDQuNC8INC/0L7Qv9Cw0LTQsNC90LjQtSDRgNC10LfRg9C70YzRgtCw0YLQsCDQv9C+0LjRgdC60LAg0LIg0L7QtNC90YMg0LjQtyDQt9C+0L0g0LTQvtGB0YLQsNCy0LrQuC4KCiAgICBzZWFyY2hDb250cm9sLmV2ZW50cy5hZGQoJ3Jlc3VsdHNob3cnLCBmdW5jdGlvbiAoZSkgewogICAgICBoaWdobGlnaHRSZXN1bHQoc2VhcmNoQ29udHJvbC5nZXRSZXN1bHRzQXJyYXkoKVtlLmdldCgnaW5kZXgnKV0pOwogICAgfSk7IC8vINCf0YDQvtCy0LXRgNC40Lwg0L/QvtC/0LDQtNCw0L3QuNC1INC80LXRgtC60Lgg0LPQtdC+0LvQvtC60LDRhtC40Lgg0LIg0L7QtNC90YMg0LjQtyDQt9C+0L0g0LTQvtGB0YLQsNCy0LrQuC4KCiAgICBteU1hcC5jb250cm9scy5nZXQoJ2dlb2xvY2F0aW9uQ29udHJvbCcpLmV2ZW50cy5hZGQoJ2xvY2F0aW9uY2hhbmdlJywgZnVuY3Rpb24gKGUpIHsKICAgICAgaGlnaGxpZ2h0UmVzdWx0KGUuZ2V0KCdnZW9PYmplY3RzJykuZ2V0KDApKTsKICAgIH0pOyAvLyDQn9GA0Lgg0L/QtdGA0LXQvNC10YnQtdC90LjQuCDQvNC10YLQutC4INGB0LHRgNCw0YHRi9Cy0LDQtdC8INC/0L7QtNC/0LjRgdGMLCDRgdC+0LTQtdGA0LbQuNC80L7QtSDQsdCw0LvRg9C90LAg0Lgg0L/QtdGA0LXQutGA0LDRiNC40LLQsNC10Lwg0LzQtdGC0LrRgy4KCiAgICBkZWxpdmVyeVBvaW50LmV2ZW50cy5hZGQoJ2RyYWdzdGFydCcsIGZ1bmN0aW9uICgpIHsKICAgICAgZGVsaXZlcnlQb2ludC5wcm9wZXJ0aWVzLnNldCh7CiAgICAgICAgaWNvbkNhcHRpb246ICcnLAogICAgICAgIGJhbGxvb25Db250ZW50OiAnJwogICAgICB9KTsKICAgICAgZGVsaXZlcnlQb2ludC5vcHRpb25zLnNldCgnaWNvbkNvbG9yJywgJ2JsYWNrJyk7CiAgICB9KTsgLy8g0J/QviDQvtC60L7QvdGH0LDQvdC40Lgg0L/QtdGA0LXQvNC10YnQtdC90LjRjyDQvNC10YLQutC4INCy0YvQt9GL0LLQsNC10Lwg0YTRg9C90LrRhtC40Y4g0LLRi9C00LXQu9C10L3QuNGPINC30L7QvdGLINC00L7RgdGC0LDQstC60LguCgogICAgZGVsaXZlcnlQb2ludC5ldmVudHMuYWRkKCdkcmFnZW5kJywgZnVuY3Rpb24gKCkgewogICAgICBoaWdobGlnaHRSZXN1bHQoZGVsaXZlcnlQb2ludCk7CiAgICB9KTsKCiAgICBmdW5jdGlvbiBoaWdobGlnaHRSZXN1bHQob2JqKSB7CiAgICAgIC8vINCh0L7RhdGA0LDQvdGP0LXQvCDQutC+0L7RgNC00LjQvdCw0YLRiyDQv9C10YDQtdC00LDQvdC90L7Qs9C+INC+0LHRitC10LrRgtCwLgogICAgICB2YXIgY29vcmRzID0gb2JqLmdlb21ldHJ5LmdldENvb3JkaW5hdGVzKCksCiAgICAgICAgICAvLyDQndCw0YXQvtC00LjQvCDQv9C+0LvQuNCz0L7QvSwg0LIg0LrQvtGC0L7RgNGL0Lkg0LLRhdC+0LTRj9GCINC/0LXRgNC10LTQsNC90L3Ri9C1INC60L7QvtGA0LTQuNC90LDRgtGLLgogICAgICBwb2x5Z29uID0gZGVsaXZlcnlab25lcy5zZWFyY2hDb250YWluaW5nKGNvb3JkcykuZ2V0KDApOwoKICAgICAgaWYgKHBvbHlnb24pIHsKICAgICAgICAvLyDQo9C80LXQvdGM0YjQsNC10Lwg0L/RgNC+0LfRgNCw0YfQvdC+0YHRgtGMINCy0YHQtdGFINC/0L7Qu9C40LPQvtC90L7Qsiwg0LrRgNC+0LzQtSDRgtC+0LPQviwg0LIg0LrQvtGC0L7RgNGL0Lkg0LLRhdC+0LTRj9GCINC/0LXRgNC10LTQsNC90L3Ri9C1INC60L7QvtGA0LTQuNC90LDRgtGLLgogICAgICAgIGRlbGl2ZXJ5Wm9uZXMuc2V0T3B0aW9ucygnZmlsbE9wYWNpdHknLCAwLjQpOwogICAgICAgIHBvbHlnb24ub3B0aW9ucy5zZXQoJ2ZpbGxPcGFjaXR5JywgMC44KTsgLy8g0J/QtdGA0LXQvNC10YnQsNC10Lwg0LzQtdGC0LrRgyDRgSDQv9C+0LTQv9C40YHRjNGOINCyINC/0LXRgNC10LTQsNC90L3Ri9C1INC60L7QvtGA0LTQuNC90LDRgtGLINC4INC/0LXRgNC10LrRgNCw0YjQuNCy0LDQtdC8INC10ZEg0LIg0YbQstC10YIg0L/QvtC70LjQs9C+0L3QsC4KCiAgICAgICAgZGVsaXZlcnlQb2ludC5nZW9tZXRyeS5zZXRDb29yZGluYXRlcyhjb29yZHMpOwogICAgICAgIGRlbGl2ZXJ5UG9pbnQub3B0aW9ucy5zZXQoJ2ljb25Db2xvcicsIHBvbHlnb24ucHJvcGVydGllcy5nZXQoJ2ZpbGwnKSk7IC8vINCX0LDQtNCw0LXQvCDQv9C+0LTQv9C40YHRjCDQtNC70Y8g0LzQtdGC0LrQuC4KCiAgICAgICAgaWYgKHR5cGVvZiBvYmouZ2V0VGhvcm91Z2hmYXJlID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBzZXREYXRhKG9iaik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vINCV0YHQu9C4INCy0Ysg0L3QtSDRhdC+0YLQuNGC0LUsINGH0YLQvtCx0Ysg0L/RgNC4INC60LDQttC00L7QvCDQv9C10YDQtdC80LXRidC10L3QuNC4INC80LXRgtC60Lgg0L7RgtC/0YDQsNCy0LvRj9C70YHRjyDQt9Cw0L/RgNC+0YEg0Log0LPQtdC+0LrQvtC00LXRgNGDLAogICAgICAgICAgLy8g0LfQsNC60L7QvNC80LXQvdGC0LjRgNGD0LnRgtC1INC60L7QtCDQvdC40LbQtS4KICAgICAgICAgIHltYXBzLmdlb2NvZGUoY29vcmRzLCB7CiAgICAgICAgICAgIHJlc3VsdHM6IDEKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICB2YXIgb2JqID0gcmVzLmdlb09iamVjdHMuZ2V0KDApOwogICAgICAgICAgICBzZXREYXRhKG9iaik7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g0JXRgdC70Lgg0L/QtdGA0LXQtNCw0L3QvdGL0LUg0LrQvtC+0YDQtNC40L3QsNGC0Ysg0L3QtSDQv9C+0L/QsNC00LDRjtGCINCyINC/0L7Qu9C40LPQvtC9LCDRgtC+INC30LDQtNCw0ZHQvCDRgdGC0LDQvdC00LDRgNGC0L3Rg9GOINC/0YDQvtC30YDQsNGH0L3QvtGB0YLRjCDQv9C+0LvQuNCz0L7QvdC+0LIuCiAgICAgICAgZGVsaXZlcnlab25lcy5zZXRPcHRpb25zKCdmaWxsT3BhY2l0eScsIDAuNCk7IC8vINCf0LXRgNC10LzQtdGJ0LDQtdC8INC80LXRgtC60YMg0L/QviDQv9C10YDQtdC00LDQvdC90YvQvCDQutC+0L7RgNC00LjQvdCw0YLQsNC8LgoKICAgICAgICBkZWxpdmVyeVBvaW50Lmdlb21ldHJ5LnNldENvb3JkaW5hdGVzKGNvb3Jkcyk7IC8vINCX0LDQtNCw0ZHQvCDQutC+0L3RgtC10L3RgiDQsdCw0LvRg9C90LAg0Lgg0LzQtdGC0LrQuC4KCiAgICAgICAgZGVsaXZlcnlQb2ludC5wcm9wZXJ0aWVzLnNldCh7CiAgICAgICAgICBpY29uQ2FwdGlvbjogJ9CU0L7RgdGC0LDQstC60LAg0YLRgNCw0L3RgdC/0L7RgNGC0L3QvtC5INC60L7QvNC/0LDQvdC40LXQuScsCiAgICAgICAgICBiYWxsb29uQ29udGVudDogJ0PQstGP0LbQuNGC0LXRgdGMINGBINC+0L/QtdGA0LDRgtC+0YDQvtC8JywKICAgICAgICAgIGJhbGxvb25Db250ZW50SGVhZGVyOiAnJwogICAgICAgIH0pOyAvLyDQn9C10YDQtdC60YDQsNGI0LjQstCw0LXQvCDQvNC10YLQutGDINCyINGH0ZHRgNC90YvQuSDRhtCy0LXRgi4KCiAgICAgICAgZGVsaXZlcnlQb2ludC5vcHRpb25zLnNldCgnaWNvbkNvbG9yJywgJ2JsYWNrJyk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHNldERhdGEob2JqKSB7CiAgICAgICAgdmFyIGFkZHJlc3MgPSBbb2JqLmdldFRob3JvdWdoZmFyZSgpLCBvYmouZ2V0UHJlbWlzZU51bWJlcigpLCBvYmouZ2V0UHJlbWlzZSgpXS5qb2luKCcgJyk7CgogICAgICAgIGlmIChhZGRyZXNzLnRyaW0oKSA9PT0gJycpIHsKICAgICAgICAgIGFkZHJlc3MgPSBvYmouZ2V0QWRkcmVzc0xpbmUoKTsKICAgICAgICB9CgogICAgICAgIHZhciBwcmljZSA9IHBvbHlnb24ucHJvcGVydGllcy5nZXQoJ2Rlc2NyaXB0aW9uJyk7CiAgICAgICAgcHJpY2UgPSBwcmljZS5tYXRjaCgvPHN0cm9uZz4oLispPFwvc3Ryb25nPi8pWzFdOwogICAgICAgIGRlbGl2ZXJ5UG9pbnQucHJvcGVydGllcy5zZXQoewogICAgICAgICAgaWNvbkNhcHRpb246IGFkZHJlc3MsCiAgICAgICAgICBiYWxsb29uQ29udGVudDogYWRkcmVzcywKICAgICAgICAgIGJhbGxvb25Db250ZW50SGVhZGVyOiBwcmljZQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfQoKICAkLmFqYXgoewogICAgdXJsOiAnaHR0cDovL2dpcy1sYWIuaW5mby9kYXRhL21vcy1hZG0vYW8uZ2VvanNvbicsCiAgICBkYXRhVHlwZTogJ2pzb24nLAogICAgc3VjY2Vzczogb25ab25lc0xvYWQKICB9KTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNYXBNb3Njb3cnCn07"},{"version":3,"sources":["MapMoscow.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-btn>WORKING</v-btn>\n  </div>\n</template>\n\n<script>\n\nimport * as ymaps from 'ymaps'\n\nymaps.ready(init)\n\nfunction init () {\n  const myMap = new ymaps.Map('map', {\n      center: [30.264981955459618, 59.9567962610097],\n      zoom: 9,\n      controls: ['geolocationControl', 'searchControl']\n    }),\n    deliveryPoint = new ymaps.GeoObject({\n      geometry: { type: 'Point' },\n      properties: { iconCaption: 'Адрес' }\n    }, {\n      preset: 'islands#blackDotIconWithCaption',\n      draggable: true,\n      iconCaptionMaxWidth: '215'\n    }),\n    searchControl = myMap.controls.get('searchControl')\n  searchControl.options.set({ noPlacemark: true, placeholderContent: 'Введите адрес доставки' })\n  myMap.geoObjects.add(deliveryPoint)\n\n  function onZonesLoad (json) {\n    // Добавляем зоны на карту.\n    const deliveryZones = ymaps.geoQuery(json).addToMap(myMap)\n    // Задаём цвет и контент балунов полигонов.\n    deliveryZones.each(function (obj) {\n      obj.options.set({\n        fillColor: obj.properties.get('fill'),\n        fillOpacity: obj.properties.get('fill-opacity'),\n        strokeColor: obj.properties.get('stroke'),\n        strokeWidth: obj.properties.get('stroke-width'),\n        strokeOpacity: obj.properties.get('stroke-opacity')\n      })\n      obj.properties.set('balloonContent', obj.properties.get('description'))\n    })\n\n    // Проверим попадание результата поиска в одну из зон доставки.\n    searchControl.events.add('resultshow', function (e) {\n      highlightResult(searchControl.getResultsArray()[e.get('index')])\n    })\n\n    // Проверим попадание метки геолокации в одну из зон доставки.\n    myMap.controls.get('geolocationControl').events.add('locationchange', function (e) {\n      highlightResult(e.get('geoObjects').get(0))\n    })\n\n    // При перемещении метки сбрасываем подпись, содержимое балуна и перекрашиваем метку.\n    deliveryPoint.events.add('dragstart', function () {\n      deliveryPoint.properties.set({ iconCaption: '', balloonContent: '' })\n      deliveryPoint.options.set('iconColor', 'black')\n    })\n\n    // По окончании перемещения метки вызываем функцию выделения зоны доставки.\n    deliveryPoint.events.add('dragend', function () {\n      highlightResult(deliveryPoint)\n    })\n\n    function highlightResult (obj) {\n      // Сохраняем координаты переданного объекта.\n      const coords = obj.geometry.getCoordinates(),\n        // Находим полигон, в который входят переданные координаты.\n        polygon = deliveryZones.searchContaining(coords).get(0)\n\n      if (polygon) {\n        // Уменьшаем прозрачность всех полигонов, кроме того, в который входят переданные координаты.\n        deliveryZones.setOptions('fillOpacity', 0.4)\n        polygon.options.set('fillOpacity', 0.8)\n        // Перемещаем метку с подписью в переданные координаты и перекрашиваем её в цвет полигона.\n        deliveryPoint.geometry.setCoordinates(coords)\n        deliveryPoint.options.set('iconColor', polygon.properties.get('fill'))\n        // Задаем подпись для метки.\n        if (typeof (obj.getThoroughfare) === 'function') {\n          setData(obj)\n        } else {\n          // Если вы не хотите, чтобы при каждом перемещении метки отправлялся запрос к геокодеру,\n          // закомментируйте код ниже.\n          ymaps.geocode(coords, { results: 1 }).then(function (res) {\n            const obj = res.geoObjects.get(0)\n            setData(obj)\n          })\n        }\n      } else {\n        // Если переданные координаты не попадают в полигон, то задаём стандартную прозрачность полигонов.\n        deliveryZones.setOptions('fillOpacity', 0.4)\n        // Перемещаем метку по переданным координатам.\n        deliveryPoint.geometry.setCoordinates(coords)\n        // Задаём контент балуна и метки.\n        deliveryPoint.properties.set({\n          iconCaption: 'Доставка транспортной компанией',\n          balloonContent: 'Cвяжитесь с оператором',\n          balloonContentHeader: ''\n        })\n        // Перекрашиваем метку в чёрный цвет.\n        deliveryPoint.options.set('iconColor', 'black')\n      }\n\n      function setData (obj){\n        let address = [obj.getThoroughfare(), obj.getPremiseNumber(), obj.getPremise()].join(' ')\n        if (address.trim() === '') {\n          address = obj.getAddressLine()\n        }\n        let price = polygon.properties.get('description')\n        price = price.match(/<strong>(.+)<\\/strong>/)[1]\n        deliveryPoint.properties.set({\n          iconCaption: address,\n          balloonContent: address,\n          balloonContentHeader: price\n        })\n      }\n    }\n  }\n  $.ajax ({\n    url: 'http://gis-lab.info/data/mos-adm/ao.geojson',\n    dataType: 'json',\n    success: onZonesLoad\n  })\n}\nexport default {\n  name: 'MapMoscow'\n}\n</script>\n"],"sourceRoot":"src/components"}]}